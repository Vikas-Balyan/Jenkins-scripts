node{
        def mvnHome = tool name: 'maven', type: 'maven'
        def mvnCMD = "${mvnHome}/bin/mvn"
    stage('SCM Checkout'){
        git branch: 'main', credentialsId: 'sarthak_azure', url: 'https://ALPHACODESCATS@dev.azure.com/ALPHACODESCATS/PROWATCH/_git/TestDemo'
    }
    stage('Sonar Analasis'){
    withSonarQubeEnv(credentialsId: 'jenkins-sonar') {
      sh "${mvnCMD} sonar:sonar"
     }
    }
    stage('Mvn Package'){

        sh "${mvnCMD} clean package"
    }
    stage('Build Docker Image'){
        sh 'docker build -t alphacodesvikas/docker-app:1.0.0 .'
    }
    stage('Push Docker Image'){
     withCredentials([string(credentialsId: 'docker-pwd', variable: 'dockerHubPwd')]) {
        sh "docker login -u alphacodesvikas -p ${dockerHubPwd}"
     }
     sh 'docker push alphacodesvikas/docker-app:1.0.0'
    }
    

    stage('Run Container on Dev Server'){
     def dockerDel = 'docker rm -f docker-app'
     def dockerRun = 'docker run  -p 6262:6262 -d --name docker-app alphacodesvikas/docker-app:1.0.0'
     sshagent(['dev-server-115']) {
      sh "ssh -o StrictHostKeyChecking=no root@172.16.10.115 ${dockerDel}"
      sh "ssh -o StrictHostKeyChecking=no root@172.16.10.115 ${dockerRun}"
     }
    }
}
